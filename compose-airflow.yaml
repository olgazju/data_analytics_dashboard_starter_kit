name: da-kit-project
networks:
  infra_network:
    driver: bridge

services:
  streamlit:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: streamlit
    volumes:
      - ./frontend:/app
    ports:
      - "8501:8501"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - infra_network

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    networks:
      - infra_network

  scheduler:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    entrypoint: ["/bin/bash", "/opt/airflow/scripts/airflow-entrypoint.sh"]
    command: ["scheduler"]
    restart: on-failure
    env_file:
      - .env
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - airflow_data:/opt/airflow
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - infra_network

   # Migration service
  airflow-init:
    image: apache/airflow:latest-python3.12
    entrypoint: ["/bin/bash", "/opt/airflow/scripts/airflow-entrypoint.sh"]
    command: ["init"]
    env_file:
      - .env
    environment:
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - airflow_data:/opt/airflow
    networks:
      - infra_network
    restart: "no"

  webserver:
    hostname: webserver
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    entrypoint: ["/bin/bash", "/opt/airflow/scripts/airflow-entrypoint.sh"]
    command: ["webserver"]
    restart: always
    user: "${AIRFLOW_UID:-50000}:0"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - airflow_data:/opt/airflow
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 2
    networks:
      - infra_network

volumes:
  airflow_data:
